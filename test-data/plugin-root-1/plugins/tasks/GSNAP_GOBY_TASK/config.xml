<taskConfig>
    <id>GSNAP_GOBY_TASK</id>
    <name>GSNAP_GOBY aligner</name>
    <version>1.0</version>
    <help>Execute GSNAP_WITH_GOBY resource as Task</help>

    <runtime>
        <need scope="ALIGN" key="excl" value="true"/>
        <need scope="ALIGN" key="h_vmem" value="25g"/>
        <need scope="ALIGN" key="virtual_free" value="28g"/>
        <need scope="ALIGN" key="os" value="rhel5.4"/>
        <need scope="ALIGN_JVM" value="4g"/>
        <need scope="ALIGNMENT_POST_PROCESSING" key="excl" value="false"/>
        <need scope="ALIGNMENT_POST_PROCESSING" key="h_vmem" value="10g" />
        <need scope="ALIGNMENT_POST_PROCESSING" key="virtual_free" value="12g" />
    </runtime>
    <!-- resources required by the task-->
    <requires>
        <resource>
            <id>GSNAP_WITH_GOBY</id>
            <versionAtLeast>2011.11.17</versionAtLeast>
        </resource>
    </requires>
    <execute>
        <script phase="pre-deployment" language="groovy|java|bash|.." filename="myscript.sh"/>
    </execute>
    <inputSchema>
        <fileSets>  <!-- OR or AND among instanceOf ?-->
            <fileSet>
                <id>COMPACT_READS</id>
                <versionAtLeast>1.0</versionAtLeast>
            </fileSet>
        </fileSets>
    </inputSchema>
    <outputSchema>
        <fileSets>
            <fileSet>
                <id>GOBY_ALIGNMENT</id>
                <version>1.0</version>
                <failureIfNotProduced>true</failureIfNotProduced>
            </fileSet>
        </fileSets>
    </outputSchema>
    <options>
       <!-- to simplify, options will be initially hard coded in the test client invoking the task  -->
    </options>
</taskConfig>